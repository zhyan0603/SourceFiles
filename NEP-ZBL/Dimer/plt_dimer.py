# dimer file can be generated by our GPUMDkit (https://github.com/zhyan0603/GPUMDkit). 
# gpumdkit.sh -plt dimer Li Li nep.txt

import numpy as np
import matplotlib.pyplot as plt
from cycler import cycler
import sys

custom_colors = ['#8FA2CD', '#F8BC7E', '#A9CA70', '#F09BA0', '#9D9EA3', '#B7B7EB']
plt.rcParams['axes.prop_cycle'] = cycler(color=custom_colors)

data_802 = np.loadtxt('./dimer_802_Li_Li.txt', skiprows=1)
data_802_zbl = np.loadtxt('./dimer_802_Li_Li_zbl.txt', skiprows=1)
data_stand = np.loadtxt('./dimer_nepstd_Li_Li.txt', skiprows=1)

fig, axs = plt.subplots(2, 1, figsize=(5, 5.4), dpi=150)

# Plot the first subplot
axs[0].plot(data_stand[:, 0], data_stand[:, 1], label=r'NEP$_{std}$')
axs[0].plot(data_802[:, 0], data_802[:, 1] , label=r'NEP$_{802}$')
axs[0].plot(data_802_zbl[:, 0], data_802_zbl[:, 1] , label=r'NEP$_{802}$-ZBL')
axs[0].set_xlabel('Dimer Distance (Å)')
axs[0].set_ylabel(r'$\Delta$E (eV)')
axs[0].legend(fontsize=8, loc='upper left')  # Ensure legend stays in the main plot

# Add inset to the first subplot
# Using `add_axes` to freely control position and size
inset1 = fig.add_axes([0.42, 0.67, 0.48, 0.26])  # [left, bottom, width, height]
inset1.plot(data_stand[:, 0], data_stand[:, 1])
inset1.plot(data_802[:, 0], data_802[:, 1])
inset1.plot(data_802_zbl[:, 0], data_802_zbl[:, 1])
inset1.set_xlim(0.0, 2.5)
inset1.set_ylim(-1, 5)  # Adjust as necessary
inset1.axvline(0.9, color='grey', linestyle='--', linewidth=1)
inset1.axvline(1.8, color='grey', linestyle='--', linewidth=1)
inset1.axvline(1.15, color='#8FA2CD', linestyle='--', linewidth=1)
inset1.axvline(1.32, color='#F8BC7E', linestyle='--', linewidth=1)
inset1.set_xlabel('Dimer Distance (Å)', fontsize=8)
inset1.set_ylabel(r'$\Delta$E (eV)', fontsize=8)
inset1.tick_params(axis='both', labelsize=7.5)

# Plot the second subplot
axs[1].plot(data_stand[:, 0], data_stand[:, 2], label=r'NEP$_{std}$')
axs[1].plot(data_802[:, 0], data_802[:, 2], label=r'NEP$_{802}$')
axs[1].plot(data_802_zbl[:, 0], data_802_zbl[:, 2], label=r'NEP$_{802}$-ZBL')
axs[1].set_xlabel('Dimer Distance (Å)')
axs[1].set_ylabel('Fx (eV/Å)')
axs[1].legend(fontsize=8, loc='upper left')  # Ensure legend stays in the main plot

# Add inset to the second subplot
inset2 = fig.add_axes([0.42, 0.23, 0.48, 0.26])  # [left, bottom, width, height]
inset2.plot(data_stand[:, 0], data_stand[:, 2])
inset2.plot(data_802[:, 0], data_802[:, 2])
inset2.plot(data_802_zbl[:, 0], data_802_zbl[:, 2])
inset2.set_xlim(0.0, 2.5)
inset2.set_ylim(-7.2, 8)  # Adjust as necessary
inset2.axvline(0.9, color='grey', linestyle='--', linewidth=1)
inset2.axvline(1.8, color='grey', linestyle='--', linewidth=1)
#inset2.axvline(1.55, color='#8FA2CD', linestyle='--', linewidth=1)
#inset2.axvline(1.62, color='#F8BC7E', linestyle='--', linewidth=1)
inset2.axvline(1.15, color='#8FA2CD', linestyle='--', linewidth=1)
inset2.axvline(1.32, color='#F8BC7E', linestyle='--', linewidth=1)
inset2.set_xlabel('Dimer Distance (Å)', fontsize=8)
inset2.set_ylabel('Fx (eV/Å)', fontsize=8)
inset2.tick_params(axis='both', labelsize=7.5)

fig.subplots_adjust(top=0.972,bottom=0.11, left=0.159,right=0.97,hspace=0,wspace=0.25)
if len(sys.argv) > 1 and sys.argv[1] == 'save':
    plt.savefig('dimer.png', dpi=600)
else:
    plt.show()
